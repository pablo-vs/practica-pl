# Primera entrega: ejemplos de programas
# Marcos Brian Leiva
# Pablo Villalobos


# Calcula el factorial de n (uso de asignaciones, if, repeat (for), enteros)
fun Int fact (n:Int) = {
	Int ans = -1;
	if n >= 0{
		ans = 1;
		Int i = 0;
		repeat n {
			ans = ans * i;
			i = i + 1;
		};
	};
	return ans;
};

# Búsqueda en una lista (otra versión de if, repeat (while), inf, acceso a arrays, not, null)
fun Int busqueda (c:Int, list:[Int]) = {
	Int i = 0;
	Bool encontrado = false;
	repeat inf | not (encontrado or list[i] == null) {
		if (list[i] == c){
			encontrado = true;
		} else {
			i = i + 1;
		};
	};
	if (not encontrado){
		return i;
	} else {
		return -1;
	};
};

# Calcula la media de los primeros n elementos de una lista (repeat general, decimales)
fun Dec avg (list:[Dec], n:Int) = {
	Int i = 0;
	Dec suma = 0;
	if n > 0 {
		repeat n | not list[i] == null {
			suma = suma + list[i];
			i = i + 1;
		};
		return suma / n;
	} else {
		return 0;
	};
};

# Devuelve una tupla con el valor de n % 3 y su valor en texto (case, módulos, strings, acceso a tuplas)
fun (Int, String) mod3 (n:Int) = {
	case n mod 3 {
		0 -> {
			(Int, String) ans = (0, "zero");
			return ans;
		}
		1 -> {
			return (1, "one");
		}
		2 -> {
			(Int, String) ans;
			ans[0] = 2;
			ans[1] = "two";
			return ans;
		}
	};
};

# Varias expresiones (enteros, decimales, booleanos, strings...)
Int x = ((+5) * 2 - 3) mod 4; 					# x = 3
Int y;											# Declaración sin asignación
y = (4 + 8) / 3 + (-2); 						# y = 2
Int z = fact (4);								# z = 24
Dec m = 1.5 + 3 * 0.7; 							# m = 3.6
Bool b1 = y > 4 and x < 5 or z == 24;			# b1 = true
Bool b2 = y > 4 and (x < 5 or z == 24);			# b2 = false (and tiene prioridad sobre or)
String s1 = "string tipo 1";
String s2 = 'string tipo 2';

# Punteros
&Int punt = &x; 								# punt apunta a x
^punt = y + ^punt - 4;							# x = 1

# Arrays
[Int] list1 = [3 + 5, 1, z];
[Dec] list2 = [2.3, 3.2 / 2, m];
y = busqueda(x, list1);							# y = 1;
m = avg(list2, 3);								# m = 2.5
[Bool] list3 = [b2, false, b1];
list3 = list3 ++ [false, b1, b2]; 				# Concatenación de arrays

# Tipos con nombre, structs, tuplas
type Coord = (Dec, Dec);
type Circle = struct [
	center: Coord,
	radius: Dec
];
Coord point = (m, 1.2);
Circle c1;
c1.center = point;								# Acceso a structs
c1.radius = 2;

# Diccionarios
[Int: String] dict = [
	0: "zero",
	1: "one",
	2: "two"
];
(Int, String) tupla = mod3(z);					# tupla = (0, "zero")
String s3 = "";
if (tupla[1] == dict[tupla[0]]) {
	s3 = "Igual";
};												# Acceso a diccionarios
s3 = dict[0] ++ ", " ++ dict[2];				# Acceso a diccionarios, concatenación de strings
